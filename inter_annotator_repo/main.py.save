
>>>>>>> 8c41407 (Ayto generate figures)
plotter = AnnotationPlotter(figures_dir)
for filename, df in dataframes.items():
    plotter.plot_emotion_distribution(df, filename)

<<<<<<< HEAD
# Agreement calculation and Kappa heatmaps
for filename, df in dataframes.items():
    annotations = df[['anger', 'fear', 'joy', 'sadness', 'surprise']]
    for emotion in annotations.columns:
=======
# Example agreement calculation for one file:
# You can loop over files or do per emotion analysis here
# Just as an example:
for filename, df in dataframes.items():
    annotations = df[['anger', 'fear', 'joy', 'sadness', 'surprise']]
    for emotion in annotations.columns:
        # In your real case you'll load the full annotation matrix from your big files
>>>>>>> 8c41407 (Ayto generate figures)
        agreement = AgreementCalculator(annotations, emotion)
        kappa_matrix = agreement.compute_kappa_matrix()

        kappa_plotter = KappaPlotter(figures_dir)
<<<<<<< HEAD
        kappa_plotter.plot_kappa_heatmap(
            kappa_matrix,
            emotion,
            annotators=[f"Annotator {i+1}" for i in range(kappa_matrix.shape[0])],
            filename_prefix=f"{filename}_{emotion}"
        )
=======
        kappa_plotter.plot_kappa_heatmap(kappa_matrix, emotion, annotators=[f"Annotator {i+1}" for i in range(>>>>>>> 8c41407 (Ayto generate figures)

print("Full EDA pipeline completed successfully!")
